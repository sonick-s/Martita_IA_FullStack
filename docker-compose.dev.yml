services:
  mysql:
    image: mysql:8.3
    container_name: Martita_IA_MySQL
    ports:
      - "3306:3306"
    env_file:
      - .env
    volumes:
      - "${MYSQL_DATA}:/var/lib/mysql"
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u $${MYSQL_USER} -p$${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./MARTITA_IA_API
      dockerfile: Dockerfile.dev
    container_name: Martita_IA_Backend
    ports:
      - "8000:8000"
    volumes:
      - ./MARTITA_IA_API:/app
    env_file:
      - .env
    depends_on:
      - mysql

  flowise:
    container_name: Martita_IA_Flowise
    build:
      context: ./Flowise
      dockerfile: Dockerfile
    ports:
    - "3000:3000"
    env_file:
      - .env
    volumes:
      - "${FLOWISE_DATA}:/root/.flowise"
    restart: unless-stopped
    depends_on:
      - backend

  frontend:
    build:
      context: ./MARTITA_IA_Frontend
      dockerfile: Dockerfile.dev
    container_name: Martita_IA_Frontend
    ports:
      - "5173:5173" 
    env_file:
      - .env
    volumes:
      - ./MARTITA_IA_Frontend:/app      
      - /app/node_modules                  
    environment:
      - CHOKIDAR_USEPOLLING=true      
    depends_on:
      - backend

  manual_usuario:
    build:
      context: ./Manual_Usuario
      dockerfile: Dockerfile
    ports:
      - "${HOST_PORT_Usuario}:3000"
    volumes:
      - ./Manual_Usuario:/app
    command: ["npx", "docusaurus", "start", "--host", "0.0.0.0"]
    environment:
      - PORT=3000

  manual_tecnico:
    build:
      context: ./Manual_Tecnico
      dockerfile: Dockerfile
    ports:
      - "${HOST_PORT_Tecnico}:3000"
    volumes:
      - ./Manual_Tecnico:/app
    command: ["npx", "docusaurus", "start", "--host", "0.0.0.0"]
    environment:
      - PORT=3000

networks:
  default:
    driver: bridge